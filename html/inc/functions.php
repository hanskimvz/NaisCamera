<?PHP
$baseDir = "/app/setting/";
function startsWith($haystack, $needle) {
    // search backwards starting from haystack length characters from the end
    return $needle === "" || strrpos($haystack, $needle, -strlen($haystack)) !== false;
}

function endsWith($haystack, $needle) {
    // search forward starting from end minus needle length characters
    return $needle === "" || (($temp = strlen($haystack) - strlen($needle)) >= 0 && strpos($haystack, $needle, $temp) !== false);
}

function dot2array(&$arr, $path, $value, $separator='.') {
    $keys = explode($separator, $path);

    foreach ($keys as $key) {
        $arr = &$arr[$key];
    }
    $arr = $value;
}

function array2dot($arr, $narr = array(), $nkey = '') {
    foreach ($arr as $key => $value) {
        if (is_array($value)) {
            $narr = array_merge($narr, array2dot($value, $narr, $nkey . $key . '.'));
        } else {
            $narr[$nkey . $key] = $value;
        }
    }
    return $narr;
}

function writeFile($fname, $arr){
    $json_str =  json_encode($arr, JSON_PRETTY_PRINT);
    $rs = file_put_contents($fname, $json_str);
    return $rs;
}

function getArrayFromFile($grp_str, $dot=False){
    global $baseDir;
    $arr = array();
    $arr_grp = array();
    $ex_grp = explode(",", $grp_str);
    for ($i=0; $i<sizeof($ex_grp); $i++) {
        if ($ex_grp[$i]) {
            array_push($arr_grp, explode(".", $ex_grp[$i]));
        }
    }

    for ($i=0; $i<sizeof($arr_grp);$i++) {
        $fname = $baseDir.$arr_grp[$i][0].".tbl";
       
        if(file_exists(($fname))) {
            $body = file_get_contents($fname);
            $arr[$arr_grp[$i][0]] = json_decode($body, true);
        }
        else {
            $fname = $baseDir."param.tbl";
            $body = file_get_contents($fname);
            $arr_t = json_decode($body, 1);
            foreach($arr_t as $g =>$a){
                $arr[$g] = $a;
            }
        }
        $arr[$arr_grp[$i][0]]['fname'] = $fname;
    }
    if ($dot) {
        return array2dot($arr);
    }
    return $arr;
}
function sys_shell_script($cmd){
    $body = file_get_contents("/app/bin/cmdstring.sh");
    $lines = explode("\n", $body);
    $body = "";
    foreach($lines as $line){
        print ($line);
        // if (in_array($line, $lines)) {
        //     continue;
        // }
        $body .="\n".$line;
    }
    $body .= "\n".$cmd;
    file_put_contents("/app/bin/cmdstring.sh", $body);

}

function modify_network_system($grps){
    $arr = getArrayFromFile('network', true);
    // print_r($arr);
    if (in_array($grps, ["network.eth0.ipversion", "network.eth0.dhcp.enable", "network.eth0.ipaddress", "network.eth0.subnet", "network.eth0.gateway", "network.ipv6.enable"])) {
        // change /etc/network/interface
        $body  = "# interface file auto-generated by buildroot\n";
        $body .= "# and generated by php \n";
        $body .= "\n";
        $body .= "auto lo\n";
        $body .= "iface lo inet loopback\n";
        $body .= "\n";
        $body .= "#eth0 dhcp config example\n";
        $body .= "#auto eth0\n";
        $body .= "#iface eth0 inet dhcp\n";
        $body .= "#udhcpc_opts -b\n";
        $body .= "#pre-up /etc/network/nfs_check\n";
        $body .= "#wait-delay 15\n";
        $body .= "\n";
        $body .= "#eth0 static ipv4  config example\n";
        $body .= "#auto eth0\n";
        $body .= "#iface eth0 inet static\n";
        $body .= "#address 192.168.1.31\n";
        $body .= "#netmask 255.255.0.0\n";
        $body .= "#gateway 192.168.1.1\n";
        $body .= "\n";
        $body .= "#auto eth0\n";
        $body .= "#iface eth0 inet6 auto\n";
        $body .= "\n";

        if ($arr["network.eth0.ipversion"] == "ipv4") {
            if ($arr["network.eth0.dhcp.enable"] == "yes") {
                $body .= "auto eth0\n";
                $body .= "iface eth0 inet dhcp\n";
                $body .= "udhcpc_opts -b\n";
                $body .= "pre-up /etc/network/nfs_check\n";
                $body .= "wait-delay 15\n";
                $body .= "\n";
            }
            else {
                $body .= "auto eth0\n";
                $body .= "iface eth0 inet static\n";
                $body .= "address ".$arr["network.eth0.ipaddress"]."\n";
                $body .= "netmask ".$arr["network.eth0.subnet"]."\n";
                $body .= "gateway ".$arr["network.eth0.gateway"]."\n";
                $body .= "\n";
            }
        }
        else if ($arr["network.eth0.ipversion"] == "ipv6" && $arr["network.ipv6.enable"] =="yes") {
            $body .= "auto eth0\n";
            $body .= "iface eth0 inet6 auto\n";        
        }
        // print $body;
        file_put_contents("/etc/network/interfaces",$body);
        // ifdown, ifup
        sys_shell_script("ifdown eth0; ifup eth0");
    }
    else if (in_array($grps, ["network.dns.preferred","network.dns.alternate0","network.dns.alternate1","network.dns.alternate2"])){
        //change /etc/resolve.conf
        $body = "";
        if ($arr["network.dns.preferred"]) {
            $body .= "nameserver ".$arr["network.dns.preferred"]."\n";
        }
        if ($arr["network.dns.alternate0"]) {
            $body .= "nameserver ".$arr["network.dns.alternate0"]."\n";
        }
        if ($arr["network.dns.alternate1"]) {
            $body .= "nameserver ".$arr["network.dns.alternate1"]."\n";
        }
        if ($arr["network.dns.alternate2"]) {
            $body .= "nameserver ".$arr["network.dns.alternate2"]."\n";
        }
        // print $body;
        file_put_contents("/etc/resolve.conf",$body);
        sys_shell_script("ifdown eth0; ifup eth0");

    }
    else if ($grps == "network.eth0.hostname"){
        //change /etc/hostname
        $body = $arr["network.eth0.hostname"];
        // print $body;
        file_put_contents("/etc/hostname",$body);
        
    }
    

}

function modify_datetime_system($grps){
    global $baseDir;
    $arr = getArrayFromFile('system', true);
    // print_r($arr);
    if (in_array($grps, ["system.datetime.tz.name",])) {
        $body = file_get_contents($baseDir."zoneinfo/tz.json");
        $arr_tz = json_decode($body, True);
        foreach($arr_tz as $tz){
            if ($tz['tz'] == $arr['system.datetime.tz.name']) {
                print_r($tz);
                $arr['system.datetime.tz.utcoffset'] = $tz['offset'];
                $arr['system.datetime.tz.posixrule'] = $tz['tz_name'];
                $arr_t = array();
                foreach($arr as $k =>$v) {
                    dot2array($arr_t, $k, $v, $separator='.');
                }
                $body = json_encode($arr_t['system'], JSON_PRETTY_PRINT);
                file_put_contents($baseDir."system.tbl", $body);

                // copy /home/setting/zoneinfo/tzname to /etc/localtime
                // modify /etc/timezone
                $cmd = "/bin/ln -f -s ".$baseDir."zoneinfo/".$tz['tz']." /etc/localtime\n";
                print($cmd);
                sys_shell_script($cmd);                
                file_put_contents("/etc/timezone", $tz['tz']);

                break;
            }
        }
    }
}

function doExtra($arr_do){
    foreach($arr_do as $grps){
        $exgrp = explode(".", $grps);
        if ($exgrp[0] == 'network'){
            modify_network_system($grps);
        }
        else if ($exgrp[0] == 'system'){
            if ($exgrp[1] == 'datetime') {
                modify_datetime_system($grps);
            }
        }
//             // change /etc/network/interface
//             if (in_array($key, ['network.eth0.ipaddress', 'network.eth0.subnet', 'network.eth0.gateway'])) {
//                 $body = file_get_contents("/etc/network/interfaces");
//                 $lines = explode("\n", $body);
//                 $body = "";
//                 for ($i=0; $i<sizeof($lines); $i++) {
//                     $line = $lines[$i];
//                     if (startsWith(trim($line), "#")){
//                         $body += $lines."\n";
//                     }
                    
//                 }
//             }


//         //change /etc/resolve.conf

//         //change /etc/hostname

//         // ifdown, ifup
//         }
    
//         else if ($grp == 'datetime'){
//             // cp /home/setting/zoneinfo/Seoul /etc/localtime
//             // echo Seoul > /etc/timezone
            
//         }
    }
}

?>